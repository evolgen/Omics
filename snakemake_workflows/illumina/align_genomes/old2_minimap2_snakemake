#!python

#!/usr/bin/env python3
import os
import sys
from glob import glob
from snakemake.utils import read_job_properties
import pdb


configfile:"config.json"

def format_species_name(sname):
	gmap = {"B":"Sebastolobus",
		"S":"Sebastes",
		"H":"Helicolenus"}
	genus, species = sname.split("-")[:3]
	genus2 = genus
	genus = gmap[genus]
	return "{genus}_{species}".format(genus=genus, species = species)

def full_name(fname):
	genus, species, sample = fname.split("-")[:1]
	return "{genus}-{species}_{sample}".format(genus=genus, species = species, sample=sample)

def get_inputs(wildcards):
	inputs = []

	for i, g1 in enumerate(config["genomes_by_species"].items()):
		for j, g2 in enumerate(config["genomes_by_species"].items()):	#			if j>=i:	continue
			species1, sample1 = g1.split("_")[1:3]
			species1 = format_species_name(species1)
			fullname1 = g1.split("_")[1:3]
			fullname1 = '_'.join(fullname1)
			species2, sample2 = g2.split("_")[1:3]
			species2 = format_species_name(species2)
			fullname2 = g2.split("_")[1:3]
			fullname2 = '_'.join(fullname2)
			if species1==species2:
				continue
			inputs.append("wga/minia/{species1}/{species1}.{species2}.maf".format(species1=species1,species2=species2))
	return inputs

rule all:
	input:
		get_inputs
#		outfile=lambda wildcards: glob("wga/minia/{species1}/{species1}.{species2}.maf"\
#			.format(species1=wildcards.species1,))

'''
rule pairmap_genomes:
	input:
		reference=lambda wildcards: glob("/global/scratch2/rohitkolora/Rockfish/Genomes/\
									sequencing/illumina/output/{species1}/*/assembly/minia_*_k61.contigs.fa"\
									.format(species1=wildcards.species1)),
		query=lambda wildcards: glob("/global/scratch2/rohitkolora/Rockfish/Genomes/\
									sequencing/illumina/output/{species2}/*/assembly/minia_*_k61.contigs.fa"\
									.format(species2=wildcards.species2)),
	output:
		paf="wga/minia/{species1}/align.{species1}.{species2}.paf",
		maf="wga/minia/{species1}/{species1}.{species2}.maf",
	params:
		slurm_opts=lambda wildcards: " -n32 " \
			"--time 0-8:00:00 " \
			"-J {wildcards.species1}-{wildcards.species2} " \
			"".format(species1=wildcards.species1, species2=wildcards.species2)
	shell:"""
		module load minimap2;
		minimap2 -t 32 -ax asm20 --cs=long -Lc \
			{input.reference} {input.query} \
			>wga/minia/{wildcards.species1}/{wildcards.species2}.tmp;
		sort -T wga/minia/{wildcards.species1}/ \
			--parallel=32 -k6,6 -k8,8n -k9,9nr \
			wga/minia/{wildcards.species1}/{wildcards.species2}.tmp >{output.paf};
		rm wga/minia/{wildcards.species1}/{wildcards.species2}.tmp;
		printf "##maf version=1\n" >{output.maf};
		paftools.js view -f maf {output.paf} \
			| tail -n +2 | \
			awk -v ref_species="${wildcards.species1}" -v query_species="${wildcards.species2}" \
			'{if(NR%4==3) {gsub("^s ","s "ref_species".",$0)} else if(NR%4==0) \
				gsub("^s ","s "query_species".",$0); \
			else if(NR%4==2) gsub("^a ","a score=",$0); print}' >>{output.maf};
	"""
'''
