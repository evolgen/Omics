#!python

#!/usr/bin/env python3
import os
import sys
from glob import glob
from snakemake.utils import read_job_properties
import pdb

configfile: "config.json"

#workdir: "/global/scratch/rohitkolora/Rockfish/Genomes/sequencing/illumina"

def get_inputs(wildcards):
	inputs = []	
	pattern = "output/{species}/{smp}/assembly/minia_k61.contigs.fa"
	for s in config["SAMPLES"]:
		species, sample = s.split("/")
		inputs.append(pattern.format(species=species,
									 smp=sample))
	return inputs

rule all: 
	input: 
  		get_inputs
    #expand("output/{smp}/assembly/minia_k61.contigs.fa", smp=config["SAMPLES"])

rule minia_assembly:
	input: 
		fwd="output/{species}/{smp}/merged/overlapped.notCombined_1.fastq", 
		rev="output/{species}/{smp}/merged/overlapped.notCombined_2.fastq", 
		ext="output/{species}/{smp}/merged/overlapped.extendedFrags.fastq",
	output:
		asmb="output/{species}/{smp}/assembly/minia_k61.contigs.fa",
	threads:
		1
	shell: """
		module load minia;
		minia -max-memory 14000 \
			-kmer-size 61 \
			-out minia_{wildcards.smp}_k61 \
			-out-dir output/{wildcards.species}/{wildcards.smp}/assembly/ \
			-out-tmp output/{wildcards.species}/{wildcards.smp}/assembly/ \
			-nb-cores {threads} \
			-in output/{wildcards.species}/{wildcards.smp}/assembly/input_fastq.fastq.gz \
			&>output/{wildcards.species}/{wildcards.smp}/assembly/minia.LOG;
		rm output/{wildcards.species}/{wildcards.smp}/assembly/input_fastq.fastq.gz \ 
			minia_{wildcards.smp}_k61.h5 \
			minia_{wildcards.smp}_k61.unitigs.fa.glue.0 \
			minia_{wildcards.smp}_k61.unitigs.fa.glue;
		"""

