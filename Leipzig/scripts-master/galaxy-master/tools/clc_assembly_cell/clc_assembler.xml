<tool id="clc_assembler" name="CLC assembler" version="0.0.1">
    <description>Assembles reads giving a FASTA file</description>
    <requirements>
        <requirement type="binary">clc_assembler</requirement>
    </requirements>
    <version_command>/mnt/apps/clcBio/clc-assembly-cell-4.1.0-linux_64/clc_assembler | grep -i version</version_command>
    <command>/mnt/apps/clcBio/clc-assembly-cell-4.1.0-linux_64/clc_assembler
#for $rg in $read_group
##--------------------------------------
#if str($rg.segments.type) == "paired"
-p $rg.segments.placement $rg.segments.dist_mode $rg.segments.min_size $rg.segments.max_size -q -i "$rg.segments.filename1" "$rg.segments.filename2"
#end if
##--------------------------------------
#if str($rg.segments.type) == "interleaved"
-p $rg.segments.placement $rg.segments.dist_mode $rg.segments.min_size $rg.segments.max_size -q "$rg.segments.filename"
#end if
##--------------------------------------
#if str($rg.segments.type) == "none"
-p no -q
#for $f in $rg.segments.filenames
"$f"
#end for
#end if
##--------------------------------------
#end for
-m $min_contig_len
-o "$out_fasta"
--cpus \$GALAXY_SLOTS
-v | grep -v "^Progress: "</command>
    <stdio>
        <!-- Assume anything other than zero is an error -->
        <exit_code range="1:" />
        <exit_code range=":-1" />
    </stdio>
    <inputs>
        <repeat name="read_group" title="Read Group" min="1">
            <conditional name="segments">
                <param name="type" type="select" label="Are these paired reads?">
                    <option value="paired">Paired reads (as two files)</option>
                    <option value="interleaved">Paired reads (as one interleaved file)</option>
                    <option value="none">Unpaired reads (single or orphan reads)</option>
                </param>
                <when value="paired">
                    <param name="placement" type="select" label="Pairing type (segment placing)">
                        <option value="fb">---&gt; &lt;--- (e.g. Sanger capillary or Solexa/Illumina paired-end library)</option>
                        <option value="bf">&lt;--- ---&gt; (e.g. Solexa/Illumina mate-pair library)</option>
                        <option value="ff">---&gt; ---&gt;</option>
                        <option value="bb">&lt;--- &lt;---</option>
                    </param>
                    <param name="dist_mode" type="select" label="How is the fragment distance measured?">
                        <option value="ss">Start to start (e.g. Sanger capillary or Solexa/Illumina libraries)</option>
                        <option value="se">Start to end</option>
                        <option value="es">End to start</option>
                        <option value="ee">End to end</option>
                    </param>
                    <!-- TODO - min/max validation done via the <code> tag? -->
                    <param name="min_size" type="integer" optional="false" min="0" value=""
                           label="Minimum size of 'good' DNA templates in the library preparation" />
                    <param name="max_size" type="integer" optional="false" min="0" value=""
                           label="Maximum size of 'good' DNA templates in the library preparation" />
                    <param name="filename1" type="data" format="fastq,fasta" required="true" label="Read file one"/>
                    <param name="filename2" type="data" format="fastq,fasta" required="true" label="Read file two"/>
                </when>
                <when value="interleaved">
                    <param name="placement" type="select" label="Pairing type (segment placing)">
                        <option value="fb">---&gt; &lt;--- (e.g. Sanger capillary or Solexa/Illumina paired-end library)</option>
                        <option value="bf">&lt;--- ---&gt; (e.g. Solexa/Illumina mate-pair library)</option>
                        <option value="ff">---&gt; ---&gt;</option>
                        <option value="bb">&lt;-- &lt;--</option>
                    </param>
                    <param name="dist_mode" type="select" label="How is the fragment distance measured?">
                        <option value="ss">Start to start (e.g. Sanger capillary or Solexa/Illumina libraries)</option>
                        <option value="se">Start to end</option>
                        <option value="es">End to start</option>
                        <option value="ee">End to end</option>
                    </param>
                    <!-- TODO - min/max validation done via the <code> tag? -->
                    <param name="min_size" type="integer" optional="false" min="0" value=""
                           label="Minimum size of 'good' DNA templates in the library preparation" />
                    <param name="max_size" type="integer" optional="false" min="0" value=""
                           label="Maximum size of 'good' DNA templates in the library preparation" />
                    <param name="filename" type="data" format="fastq,fasta" required="true" label="Interleaved read file"/>
                </when>
                <when value="none">
                    <param name="filenames" type="data" format="fastq,fasta" multiple="true" required="true" label="Read file(s)"
                           help="Multiple files allowed, for example several files of orphan reads." />
                </when>
            </conditional>
        </repeat>
        <param name="min_contig_len" type="integer" optional="false" min="1" value="200" label="Minimum contig length"/>
        <!-- Word size? -->
        <!-- Bubble size? -->
        <!-- Scaffolding options? -->
        <!-- AGP / GFF output? -->
    </inputs>
    <!-- min/max validation? <code file="clc_validator.py" /> -->
    <outputs>
        <data name="out_fasta" format="fasta" label="CLCbio assember contigs (FASTA)" />
    </outputs>
    <tests>
        <!-- Review this test once Galaxy handles repeat groups better
        <test>
            <param name="type" value="interleaved" />
            <param name="placement" value="fb" />
            <param name="dist_mode" value="ss" />
            <param name="min_size" value="1" />
            <param name="max_size" value="1000" />
            <param name="dist_mode" value="ss" />
            <param name="filename" value="SRR639755_mito_pairs.fastq.gz" ftype="fastqsanger" />
            <param name="min_contig_len" value="200" />
            <output name="out_fasta" file="SRR639755_mito_pairs.clc4_de_novo.fasta" ftype="fasta" />
        </test>
        -->
    </tests>
    <help>

**What it does**

Runs the ``clc_assembler`` tool giving a FASTA output file. You would then
typically map the same set of reads onto this assembly using ``cls_mapper``
to any perform downstream analysis using the mapped reads.


**Citation**

If you use this Galaxy tool in work leading to a scientific publication please
cite this wrapper as:

Peter J.A. Cock (2013), Galaxy wrapper for the CLC Assembly Cell suite from CLCbio
http://toolshed.g2.bx.psu.edu/view/peterjc/clc_assembly_cell

This wrapper is available to install into other Galaxy Instances via the Galaxy
Tool Shed at http://toolshed.g2.bx.psu.edu/view/peterjc/clc_assembly_cell
    </help>
</tool>
