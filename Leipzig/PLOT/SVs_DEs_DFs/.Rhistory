install.packages("ISwR")
install.packages("tidyr")
install.packages("dplyr")
install.packages(c("ape", "doParallel", "foreach", "irlba", "iterators", "phangorn", "stringi"))
install.packages(c("ape", "phangorn", "stringi"))
install.packages(c("ape", "phangorn", "stringi"))
install.packages("ape")
install.packages("stringi")
install.packages("devtools")
install.packages(c("jsonlite", "mime", "curl", "openssl", "httr"))
install.packages("jsonlite")
install.packages("x12")
library(Exact)
deletion<-matrix(c(70,237,3301,5411),nrow=2, byrow="F")
duplication<-matrix(c(12,295,249,8463),nrow=2, byrow="F")
insertion<-matrix(c(33,274,2111,6601),nrow=2, byrow="F")
inversion<-matrix(c(13,294,173,8539),nrow=2, byrow="F")
GR<-matrix(c(95,212,4138,4574),nrow=2, byrow="F")
exact.test(deletion, model="binomial", alternative="greater", method="Z-unpooled", to.plot=FALSE)
exact.test(deletion, model="binomial", alternative="less", method="Z-unpooled", to.plot=FALSE)
exact.test(duplication, model="binomial", alternative="greater", method="Z-unpooled", to.plot=FALSE)
exact.test(duplication, model="binomial", alternative="less", method="Z-unpooled", to.plot=FALSE)
exact.test(insertion, model="binomial", alternative="greater", method="Z-unpooled", to.plot=FALSE)
exact.test(insertion, model="binomial", alternative="less", method="Z-unpooled", to.plot=FALSE)
exact.test(inversion, model="binomial", alternative="greater", method="Z-unpooled", to.plot=FALSE)
exact.test(inversion, model="binomial", alternative="less", method="Z-unpooled", to.plot=FALSE)
exact.test(GR, model="binomial", alternative="greater", method="Z-unpooled", to.plot=FALSE)
exact.test(GR, model="binomial", alternative="less", method="Z-unpooled", to.plot=FALSE)
GR
#GR<-matrix(c(95,212,4138,4574),nrow=2, byrow="F")
cpgW<-matrix(c(44,30,9049,9098),nrow=2, byrow="F")
exact.test(cpgW, model="binomial", alternative="less", method="Z-unpooled", to.plot=FALSE)
exact.test(cpgW, model="binomial", alternative="greater", method="Z-unpooled", to.plot=FALSE)
library(Barnard)
library(Exact)
library(exact2x2)
library(XNomial)
#deletion<-matrix(c(70,237,3301,5411),nrow=2, byrow="F")
deletion<-matrix(c(3301,5411,70,237),nrow=2, byrow="F")
exact.test(deletion, model="binomial", alternative="greater", method="Z-unpooled", to.plot=FALSE)
insertion<-matrix(c(2111,6601,33,274),nrow=2, byrow="F")
exact.test(insertion, model="binomial", alternative="greater", method="Z-unpooled", to.plot=FALSE)
inversion<-matrix(c(8,140,77,1801),nrow=2, byrow="F")
exact.test(inversion, model="binomial", alternative="greater", method="Z-pooled", to.plot=FALSE)
exact.test(inversion, model="binomial", alternative="lesser", method="Z-pooled", to.plot=FALSE)
exact.test(inversion, model="binomial", alternative="less", method="Z-pooled", to.plot=FALSE)
exact.test(inversion, model="binomial", alternative="greater", method="Z-unpooled", to.plot=FALSE)
exact.test(inversion, model="binomial", alternative="greater", method="Z-unpooled", to.plot=FALSE)
inversion<-matrix(c(13,294,173,8539),nrow=2, byrow="F")
exact.test(inversion, model="binomial", alternative="greater", method="Z-unpooled", to.plot=FALSE)
exact.test(inversion, model="binomial", alternative="greater", method="Z-pooled", to.plot=FALSE)
deletion<-matrix(c(70,237,3301,5411),nrow=2, byrow="F")
duplication<-matrix(c(12,295,249,8463),nrow=2, byrow="F")
insertion<-matrix(c(33,274,2111,6601),nrow=2, byrow="F")
inversion<-matrix(c(13,294,173,8539),nrow=2, byrow="F")
GR<-matrix(c(95,212,4138,4574),nrow=2, byrow="F")
exact.test(inversion, model="binomial", alternative="greater", method="Z-pooled", to.plot=FALSE)
exact.test(deletion, model="binomial", alternative="less", method="Z-pooled", to.plot=FALSE)
exact.test(duplication, model="binomial", alternative="less", method="Z-pooled", to.plot=FALSE)
#exact.test(insertion, model="binomial", alternative="less", method="Z-pooled", to.plot=FALSE)
exact.test(duplication, model="binomial", alternative="greater", method="Z-pooled", to.plot=FALSE)
exact.test(insertion, model="binomial", alternative="less", method="Z-pooled", to.plot=FALSE)
p <- scan("/scr/bloodymary/rohit/Lacerta_viridis/SVs/pvalues_rearToposel", na.strings=T)
p
p.adjust(p, method = BH, n = length(p))
p.adjust(p, method = "BH", n = length(p))
library(Barnard)
library(Exact)
library(exact2x2)
pos_accl<-matrix(c(5,176,16,399),nrow=2, byrow="F")
exact.test(pos_accl, model="binomial", alternative="less", method="Z-pooled", to.plot=FALSE)
pos_accl
pos_accl<-matrix(c(5,176,16,399),nrow=2, byrow="F")
exact.test(pos_accl, model="binomial", alternative="greater", method="Z-pooled", to.plot=FALSE)
pos_accl
pos_accl<-matrix(c(5,176,69,2836),nrow=2, byrow="F")
exact.test(pos_accl, model="binomial", alternative="greater", method="Z-pooled", to.plot=FALSE)
pos_accl<-matrix(c(5,176,69,2836),nrow=2, byrow="F")
exact.test(pos_accl, model="binomial", alternative="less", method="Z-pooled", to.plot=FALSE)
pos_accl<-matrix(c(5,192,16,422),nrow=2, byrow="F")
exact.test(pos_accl, model="binomial", alternative="less", method="Z-pooled", to.plot=FALSE)
exact.test(pos_accl, model="binomial", alternative="greater", method="Z-pooled", to.plot=FALSE)
pos_accl<-matrix(c(161,206,777,651),nrow=2, byrow="F")
exact.test(pos_accl, model="binomial", alternative="greater", method="Z-pooled", to.plot=FALSE)
pos_accl<-matrix(c(161,206,777,651),nrow=2, byrow="F")
exact.test(pos_accl, model="binomial", alternative="less", method="Z-pooled", to.plot=FALSE)
pos_accl<-matrix(c(161,206,777+5175,651+6261),nrow=2, byrow="F")
exact.test(pos_accl, model="binomial", alternative="less", method="Z-pooled", to.plot=FALSE)
data_acl <- matrix(c(5,16,69,176,399,2836,16,23,98), 3, 3,
dimnames = list(Omega = c("Positive", "Neutral", "Negative"),
Type = c("Accelerated", "Neutral", "Conserved")))
data_acl
data_acl <- matrix(c(5,176,16,16,399,23,69,2836,98), 3, 3,
dimnames = list(Omega = c("Positive", "Neutral", "Negative"),
Type = c("Accelerated", "Neutral", "Conserved")))
data_acl
data_acl <- matrix(c(5,176,16,16,399,23,69,2836,98), 3, 3,
dimnames = list(Type = c("Accelerated", "Neutral", "Conserved"),
Omega = c("Positive", "Neutral", "Negative")))
data_acl
fisher.test(data_acl)
fisher.test(data_acl, simulate.p.value = TRUE, B = 1e5)
fisher.test(data_acl, simulate.p.value = TRUE, B = 1e6)
fisher.test(data_acl, simulate.p.value = FALSE, B = 1e6)
fisher.test(data_acl, simulate.p.value = TRUE, B = 1e6)
> deletion<-matrix(c(70,237,3301,5411),nrow=2, byrow="F")
deletion<-matrix(c(70,237,3301,5411),nrow=2, byrow="F")
deletion
setwd("/homes/biertank/rohit/Downloads/scripts/SVs_DEs_DFs/")
library(ggplot2)
library(gridExtra)
library(grid)
library(RColorBrewer)
data1<-read.table("/scr/bloodymary/rohit/Lacerta_viridis/SVs/plot_SV_counts.txt_paper", header=F, sep = "\t")
ggplot(data1, aes(x=data1$V1,y=log10(data1$V2), fill=data1$V1)) + geom_boxplot(alpha=0.8) +
geom_bar(data=data1, aes(y=log(..count..), fill=data1$V1), alpha=0.5) +
ylab("Counts and sizes of rearrangement (log-scaled)") + xlab("Type of genomic rearrangement") +
ggtitle("Size distribution and the number of genomic rearrangements detected in Lacertids") +
theme_bw() + theme(legend.title=element_blank()) +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data1, aes(x=data1$V1,y=log10(data1$V2), fill=data1$V1)) + geom_boxplot(alpha=0.8) +
geom_bar(data=data1, aes(y=log10(..count..), fill=data1$V1), alpha=0.5) +
ylab("Counts and sizes of rearrangement (log-scaled)") + xlab("Type of genomic rearrangement") +
ggtitle("Size distribution and the number of genomic rearrangements detected in Lacertids") +
theme_bw() + theme(legend.title=element_blank()) +
theme(plot.title = element_text(hjust = 0.5))
svg("/homes/biertank/rohit/Downloads/scripts/SVs_DEs_DFs/Size_and_count_SVs_paper.svg",
height = 8, width = 12, pointsize=12)
ggplot(data1, aes(x=data1$V1,y=log10(data1$V2), fill=data1$V1)) + geom_boxplot(alpha=0.8) +
geom_bar(data=data1, aes(y=log10(..count..), fill=data1$V1), alpha=0.5) +
ylab("Counts and sizes of rearrangement (log-scaled)") + xlab("Type of genomic rearrangement") +
ggtitle("Size distribution and the number of genomic rearrangements detected in Lacertids") +
theme_bw() + theme(legend.title=element_blank()) +
theme(plot.title = element_text(hjust = 0.5))
dev.off()
svg("/homes/biertank/rohit/Downloads/scripts/SVs_DEs_DFs/Size_and_count_SVs_paper.svg",
height = 8, width = 12, pointsize=12)
ggplot(data1, aes(x=data1$V1,y=log10(data1$V2), fill=data1$V1)) + geom_boxplot(alpha=0.8) +
geom_bar(data=data1, aes(y=log10(..count..), fill=data1$V1), alpha=0.5) +
ylab("Counts and sizes of rearrangement (log-scaled)") + xlab("Type of genomic rearrangement") +
ggtitle("Size distribution and the number of genomic rearrangements detected between Lacertids") +
theme_bw() + theme(legend.title=element_blank()) +
theme(plot.title = element_text(hjust = 0.5))
dev.off()
TeaTasting <-
matrix(c(3, 1, 1, 3),
nrow = 2,
dimnames = list(Guess = c("Milk", "Tea"),
Truth = c("Milk", "Tea")))
fisher.test(TeaTasting, alternative = "greater")
TeaTasting
matrix(c(3, 1, 1, 3),
nrow = 2,
dimnames = list(Guess = c("Milk", "Tea"),
Truth = c("Milk", "Tea")))
Convictions <-
matrix(c(2, 10, 15, 3),
nrow = 2,
dimnames =
list(c("Dizygotic", "Monozygotic"),
c("Convicted", "Not convicted")))
Convictions
?exact.test
